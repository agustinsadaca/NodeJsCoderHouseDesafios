<%- include('../partials/header') %>
<%- include('../partials/buttons') %>
<body>
  <form class="formStyle"  >
    <input class="form-control" id="title"  type="text" name="title" placeholder="Title">
    <input class="form-control" id="price" type="number" step="0.01" name="price" placeholder="Price">
    <input class="form-control" id="thumbnail" type="text" name="thumbnail" placeholder="Thumbnail">
    <button id="formulario" class="btn-block" type="submit ">AÃ±adir Producto</button>
  </form>
  <div >
    <table class="u-full-width table table-dark">
      <thead>
        <tr>
          <th scope="col">Id</th>
          <th scope="col">Title</th>
          <th scope="col">Price</th>
          <th scope="col">Thumbnail</th>
        </tr>
      </thead>
      <tbody id="prodTable">
      

    
    </tbody>
    </table>
  </div>
  <h1>Chat</h1>
    <fieldset class="chat">
      <input placeholder="E-mail" class="form-control" type="text" name="user" id="user">
      <input placeholder="Mensaje" class="form-control" type="text" name="message" id="message">
      <button id='send'>Enviar</button>
    </fieldset>
    <fieldset>
      <ul id='messages'>

      </ul>
    </fieldset>
</body>
<script>
  const socket = io()

  const title = document.getElementById("title")
  const price = document.getElementById("price")
  const thumbnail = document.getElementById("thumbnail")
  
  document.getElementById("formulario").addEventListener('click',()=>{
    socket.emit('prodChange', {'title':title.value,'price':price.value,'thumbnail':thumbnail.value})
  })

  socket.on('prodChangeBack',async (data) =>{
    let contenido=''
    await fetch('/producto')
    .then(response => response.json())
    .then(data => {
      if(data.length!=0){
      data.map(item=>{
        contenido +=`
          <tr>
            <td scope="row"><p>${item.id}</p></td>
            <td scope="row"> <p>${item.title} </p></td>
            <td scope="row"> <p>${item.price} </p></td>
            <td scope="row"><img class="imagen" src="${item.thumbnail} "></td>
          <tr>
          `
        })
      }else{
        contenido=`<td><p>No hay productos </p></td>`
      }
      document.getElementById("prodTable").innerHTML=contenido 
  })

  });
  const message = document.getElementById("message")
  const user = document.getElementById("user")
  const send = document.getElementById("send").addEventListener('click',()=>{
    socket.emit('messageFront', {'user':user.value,'message':message.value})
  })

  socket.on('messageBackend',(data)=>{
    // alert(JSON.stringify(data, null, 4));
    const user = new schema.Entity("user");
    const comment = new schema.Entity("comment", {
      author: user,
    });
    const chat = new schema.Entity("chat", {
      comments: [comment],
    });
    const normData = normalize(JSON.parse(data), chat);

    function print(objeto) {
      console.log(util.inspect(objeto, false, 12, true));
    }
    print(normData);
    const denData = denormalize(normData.result, chat, normData.entities)

    let inner=''
    denData.comments.map((message)=>{
      inner+=`
        <li class="listaMensaje">
          <div class="email text">  ${message.id} </div>
          <div class="date text">  [${message.date}]:</div>
          <div class="message text">  ${message.text}</div>
          <img href="${message.author.avartar}"/>
        </li>
      `
    })
    document.getElementById('messages').innerHTML=inner
  })
</script>
<style>
  input{
    display: block;
    margin: 15px;
    width: 25rem;
  }
  form{width:50%}
  .listaMensaje{display:flex;}
  .text{padding:0 3px;}
  .email{
    color:blue;
    font-weight:600;
  }
  .date{
    color:brown;
  }
  .message{
    font-style: italic;
  }
  .imagen{width:10%}
  table{
    margin: 20px;
    
}
.formStyle{
  width: 40%;
}
.chat{
  width: 40%;
}
.table{
  width:80%;
}
</style>
